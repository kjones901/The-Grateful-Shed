# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Upload build output
        uses: actions/upload-artifact@v4 # Use actions/upload-artifact@v4
        with:
          name: github-pages # Name the artifact "github-pages"
          path: './dist'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4 # Use actions/download-artifact@v4
        with:
          name: github-pages # Specify the artifact name to download

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Use actions/deploy-pages@v4

# # Simple workflow for deploying static content to GitHub Pages
# name: Deploy static content to Pages

# on:
#   # Runs on pushes targeting the default branch
#   push:
#     branches: ["main"]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# concurrency:
#   group: "pages"
#   cancel-in-progress: true
        
# jobs:
#   # Single deploy job since we're just deploying
#   deploy:
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Set up Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
#           cache: 'npm'
#       - name: Install dependencies
#         run: npm install
#       - name: Build
#         run: npm run build
#       - name: Setup Pages
#         uses: actions/configure-pages@v3
#       - name: Upload artifact
#         uses: actions/upload-pages-artifact@v3
#         with:
#           # Upload dist repository
#           path: './dist'
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v1


# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Set up Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm install

#       - name: Build
#         run: npm run build

#       - name: Upload build output
#         uses: actions/upload-pages-artifact@v3
#         with:
#           path: './dist'

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     environment:
#       name: github-pages

#     steps:
#       - name: Download build artifact
#         uses: actions/download-pages-artifact@v2

#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v1